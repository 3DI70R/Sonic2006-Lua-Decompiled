script.reload("player/common.lua")
function SetupModuleSub(_ARG_0_)
  OpenEffect(_ARG_0_, effect_module_standard, "player_sonic")
  OpenSound(_ARG_0_, sound_module_standard, "player_sonic")
end
debug = not_use
c_module_psi = not_use
c_module_state = state_module_sonic
c_module_model = model_module_sonic_new
c_system_model = model_system_standard
c_module_light_dash = use
c_module_homing = use
c_posture_control = posture_control_normal
c_input_system = input_system_normal
c_module_gravity = use
c_model_package = "player/sonic_new"
c_module_impulse = impulse_module_standard
psi_power = 0 * point
c_input_border = 0.1
c_dclick_time = 0.16 * sec
c_lclick_time = 0.16 * sec
script.reload("player/collision_standard.lua")
c_collision_lightdash = {
  type = shape_cylinder,
  radius = 1.5 * meter,
  height = 1 * meter
}
c_lockon_sort = use
c_lockon = {
  type = shape_convex_box,
  near_x = 5 * meter,
  near_y = 150 * meter,
  z = 300 * meter,
  far_x = 10 * meter,
  far_y = 300 * meter
}
c_lockon_homing_sort = not_use
c_lockon_homing = {
  type = shape_convex_box,
  near_x = 5 * meter,
  near_y = 5 * meter,
  z = 10 * meter,
  far_x = 10 * meter,
  far_y = 15 * meter
}
c_rotation_speed = 1 * (meter / sec)
c_rotation_speed_border = 6 * (meter / sec)
c_weight = 20 * kg
c_slope_rad = 30 * deg
c_slope_rad_b = 10 * deg
c_downforce = 0.15 * meter
c_interp_gravity = 0.5
c_brake_acc = 40 * meter
c_walk_border = 0.1
c_run_border = 0.9
c_walk_speed_max = 3 * (meter / sec)
c_run_speed_max = 20 * (meter / sec)
c_jump_time_min = 0.1 * sec
c_jump_brake = 18 * (meter / sec)
l_run_acc = 1.5 * sec
l_jump_hight = 4 * meter
l_jump_walk = 8 * meter
l_jump_run = 16 * meter
c_brake_quick_acc = 30 * meter
c_wait_no_input_time = 15 * sec
c_damage_time = 1 * sec
c_damage_jump = 2 * (meter / sec)
c_damage_speed = -1 * (meter / sec)
c_run_against_time = 1 * sec
c_grind_speed_org = 23 * (meter / sec)
c_grind_acc = 15 * meter
c_grind_speed_max = 40 * meter
c_grind_time = 0.3 * sec
c_grind_penalty_time = 0.8 * sec
c_grind_brake_acc = 2 * meter
c_brake_dashpanel = 10 * meter
c_run_algorithm = 0
c_run_gear_1_spd = 6
c_run_gear_1_acc = 20
c_run_gear_2_spd = 12
c_run_gear_2_acc = 30
c_run_gear_3_spd = 20
c_run_gear_3_acc = 40
c_invincible_time = 1 * sec
c_run_acc = (c_run_speed_max - c_walk_speed_max) / l_run_acc
c_jump_speed = 9 * (meter / sec)
c_jump_walk = 2 * (meter / sec)
c_jump_run = 9 * (meter / sec)
c_homing_dir = {
  x = 0 * meter,
  y = -0.5 * meter,
  z = 1 * meter
}
c_homing_spd = 15 * (meter / sec)
c_homing_time = 1 * sec
c_homing_damage = 1 * point
c_homing_power = 6 * 5 * N
c_homing_grind_range = 10 * meter
c_sliding_time = 3 * sec
c_sliding_power = 10 * 5 * N
c_sliding_damage = 1 * point
c_spindash_spd = 30 * (meter / sec)
c_spindash_time = 3 * sec
l_bound_jump_height0 = 4 * meter
l_bound_jump_height1 = 7 * meter
c_wallwait_time = 1 * sec
c_wallrun_spd = 3 * (meter / sec)
c_bound_jump_spd_0 = HeightToSpeed(l_bound_jump_height0)
c_bound_jump_spd_1 = HeightToSpeed(l_bound_jump_height1)
